#########################################################
# Trakx YAML config
#   All time is measured in seconds
# All values in this can be overridden with env vars
#   For example: `export TRAKX_TRACKER_HTTP_ENABLED=FALSE`

trakx:
  prod: true
  expvar:
    # how often to update expvar vals
    every: 1
  pprof:
    # port to serve pprof over, 0 to disable
    port: 1338
  # `ulimit -n` - essentially max socket limit, 0 for default
  ulimit: 0

tracker:
  http:
    # if disabled the tracker will still run an http server on the port that serves the index and DMCA page
    enabled: true
    port: 1337
    # tcp timeouts for http tracker
    readtimeout: 3
    writetimeout: 10
    # num of goroutines for http tracker
    threads: 2048
  udp:
    enabled: true
    port: 1337
    # validate connection IDs - if disabled tracker can be abused for UDP amplification
    checkconnid: true
    threads: 1024
  numwant:
    # default number of peers in response if none specified
    default: 75
    # max number of peers in response
    limit: 200
  # announce interval for clients
  announce: 1800 # 30 min
  # 0->announcefuzz seconds will randomly be added to the announce interval every request to smooth out request frequency
  announcefuzz: 300 # 5 min

database:
  # Database type options:
  #   gomap - In memory database using golang maps
  type: "gomap"
  
  # Backup type options for gomap database:
  #   file  - Writes databse to file
  #   pg    - Write databse to postgres
  #   none  - Doesn't backup database
  backup: "none"
  
  peer:
    # How often to check and remove expired peers
    trim: 600 # 10 min
    # How often to backup database in case of crash, 0 to disable
    write: 0
    # Maximum peer age before removal
    timeout: 2400 # 40 min
  conn:
    # How often to check and remove expired UDP connection IDs
    trim: 600 # 10 min
    # Maximum UDP connection ID age before removal
    timeout: 1800 # 30 min
