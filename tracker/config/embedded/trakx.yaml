# Trakx YAML config
#   Values can be overridden with env vars
#     Example: `TRAKX_LOGLEVEL=debug trakx run`


# "debug", "info", "warn", "error", or "fatal"
# "debug" will enable debug only panics
loglevel: "info"

# port to serve pprof over, 0 to disable
pprof: 0

# how often to update expvar vals, 0 to disable
expvar: 1s

# set nofile limit, 0 for default
# basically changes the max number of open sockets, equivalent to `ulimit -n`
nofilelimit: 0

# announce interval = base + [0, fuzz]
announce:
  base: 30m
  # fuzz >= 0
  fuzz: 5m

# http tracker vars
http:
  # "enabled" enables the http tracker, "info" runs an http server that serves the index and DMCA page, "disabled" disables anything http related
  mode: "enabled"
  
  # ip address to bind to, null for all interfaces
  ip: null

  port: 1337
  
  # tcp timeouts in seconds, starting from soon as connection is accepted
  timeout:
    read: 3s
    write: 10s

  # number of worker goroutines to run
  threads: 512

# udp tracker vars
udp:
  enabled: true
  
  # ip address to bind to, null for all interfaces
  ip: null

  port: 1337
  
  # number of worker goroutines to run
  threads: 512

  # udp connection database vars
  conndb:
    # validate connection IDs
    # if disabled tracker can be abused for UDP amplification DoS
    validate: true

    # initalized size of connection database map
    # set to reduce memory usage by preallocating memory
    size: 0

    # how often to trim expired connection IDs
    trim: 10m

    # maximum UDP connection ID age before removal
    expiry: 30m

# numwant vars
numwant:
  # default number of peers in response if none specified
  default: 75
  
  # max number of peers in response, numwants above this will be capped
  limit: 200

# database vars
db:
  # number of inital peer pointers
  # set to reduce memory usage by preallocating
  size: 5000

  # database types:
  #   gomap - In memory database using golang maps
  type: "gomap"
  
  backup:
    # how often to backup database in case of crash, 0 to disable
    frequency: 0s

    # backup types:
    #   gomap:
    #     none  - don't backup db
    #     file  - write db to file
    #     pg    - write db to postgres
    type: "none"
  
    # backup path
    # file path for file
    # postgres db addreses for pg
    # use "ENV:VARIABLE" to get environment variable, ex: "ENV:TEST" = os.Getenv("TEST")
    path: "ENV:DATABASE_URL"

  # how often to check and remove expired peers
  trim: 10m
  
  # max peer age before removal
  # recommended: expiry >= announce_base + announce_fuzz
  expiry: 40m

path:
  config: "~/.cache/trakx/trakx.pid"
  log: "~/.cache/trakx/trakx.log"
